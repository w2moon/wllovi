" vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:

" General {
    Bundle 'scrooloose/nerdtree'
    Bundle 'altercation/vim-colors-solarized'
    Bundle 'spf13/vim-colors'
    Bundle 'tpope/vim-surround'
    Bundle 'tpope/vim-repeat'
    Bundle 'jiangmiao/auto-pairs'
    Bundle 'ctrlpvim/ctrlp.vim'
    Bundle 'tacahiroy/ctrlp-funky'
    Bundle 'terryma/vim-multiple-cursors'
    Bundle 'vim-scripts/sessionman.vim'
    Bundle 'matchit.zip'
    if (has("python") || has("python3")) && exists('g:spf13_use_powerline') && !exists('g:spf13_use_old_powerline')
        Bundle 'Lokaltog/powerline', {'rtp':'/powerline/bindings/vim'}
    elseif exists('g:spf13_use_powerline') && exists('g:spf13_use_old_powerline')
        Bundle 'Lokaltog/vim-powerline'
    else
        Bundle 'bling/vim-airline'
    endif
    Bundle 'powerline/fonts'
    Bundle 'bling/vim-bufferline'
    Bundle 'easymotion/vim-easymotion'
    Bundle 'jistr/vim-nerdtree-tabs'
    Bundle 'flazz/vim-colorschemes'
    Bundle 'mbbill/undotree'
    Bundle 'nathanaelkane/vim-indent-guides'
    if !exists('g:spf13_no_views')
        Bundle 'vim-scripts/restore_view.vim'
    endif
    Bundle 'mhinz/vim-signify'
    Bundle 'tpope/vim-abolish.git'
    Bundle 'osyo-manga/vim-over'
    Bundle 'kana/vim-textobj-user'
    Bundle 'kana/vim-textobj-indent'
    Bundle 'gcmt/wildfire.vim'
" }


" General Programming {
    "Bundle 'scrooloose/syntastic'
    Bundle 'tpope/vim-fugitive'
    Bundle 'mattn/webapi-vim'
    "Bundle 'mattn/gist-vim'
    Bundle 'scrooloose/nerdcommenter'
    Bundle 'tpope/vim-commentary'
    Bundle 'godlygeek/tabular'
    if executable('ctags')
    "   Bundle 'majutsushi/tagbar'
    endif
" }

" Snippets & AutoComplete {
    if count(g:spf13_bundle_groups, 'snipmate')
        Bundle 'garbas/vim-snipmate'
        Bundle 'honza/vim-snippets'
        " Source support_function.vim to support vim-snippets.
        if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
            source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
        endif
    elseif count(g:spf13_bundle_groups, 'youcompleteme')
        Bundle 'Valloric/YouCompleteMe'
        Bundle 'SirVer/ultisnips'
        Bundle 'honza/vim-snippets'
    elseif count(g:spf13_bundle_groups, 'neocomplcache')
        Bundle 'Shougo/neocomplcache'
        Bundle 'Shougo/neosnippet'
        Bundle 'Shougo/neosnippet-snippets'
        Bundle 'honza/vim-snippets'
    elseif count(g:spf13_bundle_groups, 'neocomplete')
        Bundle 'Shougo/neocomplete.vim.git'
        Bundle 'Shougo/neosnippet'
        Bundle 'Shougo/neosnippet-snippets'
        Bundle 'honza/vim-snippets'
    endif
" }

" Python {
    if count(g:spf13_bundle_groups, 'python')
        " Pick either python-mode or pyflakes & pydoc
        Bundle 'klen/python-mode'
        Bundle 'yssource/python.vim'
        Bundle 'python_match.vim'
        Bundle 'pythoncomplete'
    endif
" }

" Javascript {
    if count(g:spf13_bundle_groups, 'javascript')
        Bundle 'elzr/vim-json'
        "Bundle 'groenewege/vim-less'
        "Bundle 'pangloss/vim-javascript'
        "Bundle 'briancollins/vim-jst'
        "Bundle 'kchmck/vim-coffee-script'
    endif
" }

" HTML {
    if count(g:spf13_bundle_groups, 'html')
        Bundle 'amirh/HTML-AutoCloseTag'
        Bundle 'hail2u/vim-css3-syntax'
        Bundle 'gorodinskiy/vim-coloresque'
        Bundle 'tpope/vim-haml'
    endif
" }

Bundle 'w2moon/wlvim'


unlet g:override_spf13_bundles
